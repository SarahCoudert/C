
LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin

LLDB(1)                   BSD General Commands Manual                  LLDB(1)

NNAAMMEE
     llllddbb -- The debugger

SSYYNNOOPPSSIISS
     llllddbb [--hhvvddeexxww] [--aa _a_r_c_h] [--ll _s_c_r_i_p_t_-_l_a_n_g_u_a_g_e] [--ss _l_l_d_b_-_c_o_m_m_a_n_d_s]
          [--nn _p_r_o_c_e_s_s_-_n_a_m_e] [--pp _p_i_d] _[_[_-_-_] _<_P_R_O_G_R_A_M_-_A_R_G_1_> _<_P_R_O_G_R_A_M_-_A_R_G_2_> _._._._]

DDEESSCCRRIIPPTTIIOONN
     llllddbb is the command line interface for the LLDB debugger library.  llllddbb
     can debug C, C++, Objective-C, Objective-C++ and Swift programs.

     The following options are available:

     --hh,, ----hheellpp
             Prints out the usage information for the llllddbb debugger.  The
             ----hheellpp text may be more up-to-date and authoritative than the
             command line options described in this man page.

     --vv,, ----vveerrssiioonn
             Prints out the version number of the llllddbb debugger.

     --aa,, ----aarrcchh _a_r_c_h
             Specifies which architecture llllddbb will use when launching the
             specified program (assuming the provided executable is built for
             multiple architectures.)

     --ff,, ----ffiillee _f_i_l_e_n_a_m_e
             Specifies the executable file that llllddbb will be launching /
             attaching to.

     --nn,, ----aattttaacchh--nnaammee _p_r_o_c_e_s_s_-_n_a_m_e
             Specifies the name of a currently-running process to attach to.
             (or the name of a process to wait for if --ww is used.)

     --ww,, ----wwaaiitt--ffoorr
             When used in concert with --nn pprroocceessss--nnaammee--EE, indicates that llllddbb
             should wait for a new process of that name to be started -- and
             attach to it as early in the process-launch as possible.

     --pp,, ----aattttaacchh--ppiidd _p_i_d
             Specifies a currently running process that llllddbb should attach to.

     --ll,, ----ssccrriipptt--llaanngguuaaggee _l_a_n_g_u_a_g_e
             Tells the debugger to use the specified scripting language for
             user-defined scripts, rather than the default.  Valid scripting
             languages that can be specified include Python, Perl, Ruby and
             Tcl.  Currently only the Python extensions have been implemented.

     --dd,, ----ddeebbuugg
             Tells the debugger to print out extra information for debugging
             itself.

     --ss,, ----ssoouurrccee _f_i_l_e_n_a_m_e
             Tells llllddbb to read in and execute the file "ffiilleennaammee", which
             should contain llllddbb commands.

     --ee,, ----eeddiittoorr
             Instructs llllddbb to open source files using the host's "external
             editor" mechanism.

     --xx,, ----nnoo--llllddbbiinniitt
             Do not automatically parse any '.lldbinit' files.

             (If you don't provide -f then the first argument will be the file
             to be debugged so 'lldb -- <filename> [<ARG1> [<ARG2>]]' also
             works.  Remember to end the options with "--" if any of your
             arguments have a "-" in them.)

UUSSIINNGG LLLLDDBB
     In llllddbb there is a hheellpp command which can be used to find descriptions
     and examples of all llllddbb commands.  To get help on "bbrreeaakkppooiinntt sseett" you
     would type "hheellpp bbrreeaakkppooiinntt sseett".

     There is also an aapprrooppooss command which will search the help text of all
     commands for a given term -- this is useful for locating a command by
     topic.  For instance, "aapprrooppooss bbrreeaakkppooiinntt" will list any command that has
     the word bbrreeaakkppooiinntt in its help text.

FFIILLEESS
     llllddbb will read settings/aliases/commands from three files at startup, if
     they exist.

     First, it will read a ~~//..llllddbbiinniitt--_d_e_b_u_g_g_e_r command file.  If you are
     using the llllddbb command line interface, this is ~~//..llllddbbiinniitt--llllddbb.  If you
     are using llllddbb inside a GUI debugger like XXccooddee this will be ~~//..llllddbbiinniitt--
     XXccooddee.  This is a useful place to put settings that you want to apply
     only when a given llllddbb command interpreter is used.

     Second, ~~//..llllddbbiinniitt is read.

     Third, an .lldbinit file in the current working directory (where llllddbb is
     started) will be read.

SSEEEE AALLSSOO
     The LLDB project page http://lldb.llvm.org/ has many different resources
     for llllddbb users -- the gdb/lldb command equivalence page
     http://lldb.llvm.org/lldb-gdb.html can be especially helpful for users
     coming from gdb.

BBUUGGSS
     To report bugs, please visit http://llvm.org/bugs/

AAUUTTHHOORR
     Maintained by the LLDB Team, http://lldb.llvm.org/

Darwin                           June 7, 2012                           Darwin
